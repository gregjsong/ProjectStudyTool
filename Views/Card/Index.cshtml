@model IEnumerable<ProjectStudyTool.Models.Card>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.QuestionId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Answer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CardSet)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.QuestionId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Question)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Answer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CardSet.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.CardId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.CardId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.CardId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div id="flashcard-container" style="display: flex; justify-content: center;">
    @foreach (var item in Model)
    {
        <div class="flashcard" onclick="toggleFlashcard(this)">
            <div class="question">@Html.DisplayFor(modelItem => item.Question)</div>
            <div class="answer" style="display: none;">@Html.DisplayFor(modelItem => item.Answer)</div>
        </div>
    }
</div>

<style>
    body,
    html {
        height: 100%;
        margin: 0;
    }

    table {
        margin-bottom: 20px;
    }

    .flashcard {
        width: 900px;
        height: 500px;
        border: 1px solid #ccc;
        border-radius: 10px;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        perspective: 400px;
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        margin-right: 10px;
        margin-bottom: 10px;
    }

    .question,
    .answer {
        padding: 10px;
        font-size: 20px;
    }
</style>

<script>
    function toggleFlashcard(flashcard) {
        var question = flashcard.querySelector('.question');
        var answer = flashcard.querySelector('.answer');

        if (question.style.display === 'none') {
            question.style.display = 'block';
            answer.style.display = 'none';
        } else {
            question.style.display = 'none';
            answer.style.display = 'block';
        }
    }
</script>
