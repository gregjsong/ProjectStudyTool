@model IEnumerable<ProjectStudyTool.Models.CardDto>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
@{
    var loggedIn = User.Identity!.IsAuthenticated;
    var currIdx = 0;
}

<h1>@ViewBag.CardSetName</h1>

<div id="flashcard-count">
    <span id="current-flashcard">@currIdx</span> / <span id="total-flashcards">@Model.Count()</span>
</div>
<div id="flashcard-container">
    <div id="flashcard" class="flashcard" onclick="toggleFlashcard()">
        <div class="question">@Html.DisplayFor(model => model.FirstOrDefault()!.Question)</div>
        <div class="answer" style="display: none;">@Html.DisplayFor(model => model.FirstOrDefault()!.Answer)</div>
    </div>
</div>

<div id="navigation-arrows">
    <button onclick="previousFlashcard(decCardIndex)"><i class="fas fa-arrow-left"></i></button>
    <button onclick="nextFlashcard(incCardIndex)"><i class="fas fa-arrow-right"></i></button>
</div>


@if (loggedIn)
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>

    <table class="table">
        <thead>
            <tr>
                <th>
                    Question
                </th>
                <th>
                    Answer
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Question)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Answer)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.CardId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.CardId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.CardId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<script>
    var idx = parseInt("@currIdx");

    // Update the current card index span
   function incCardIndex() {
        let curr = parseInt(document.getElementById("current-flashcard").textContent);
        if (curr < @Model.Count()) {
            document.getElementById("current-flashcard").textContent = parseInt(curr) + 1;
        }
    }

    function decCardIndex() {
        let curr = parseInt(document.getElementById("current-flashcard").textContent);
        if (curr > 1) {
            document.getElementById("current-flashcard").textContent = parseInt(curr) - 1;
        }
    }
    // Display the current card index initially
    incCardIndex();

    window.flashcards = @Html.Raw(Json.Serialize(Model));
</script>
<script src="~/js/site.js"></script>